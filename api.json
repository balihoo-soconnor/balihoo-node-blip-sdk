{
  "swagger": "2.0",
  "info": {
    "version": "1.0.1",
    "title": "BLIP API",
    "description": "Balihoo Local Information Platform API"
  },
  "host": "blip.dev.balihoo-cloud.com",
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "basicAuth": {
      "type": "basic",
      "description": "HTTP Basic Authentication."
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "basicAuth": []
    }
  ],
  "paths": {
    "/source": {
      "get": {
        "description": "Returns a list of configured sources",
        "operationId": "getSources",
        "responses": {
          "200": {
            "description": "a list of sources",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/source"
              }
            }
          }
        }
      }
    },
    "/projection": {
      "get": {
        "description": "Returns a list of configured projections",
        "operationId": "getProjections",
        "responses": {
          "200": {
            "description": "a list of projections",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/projection"
              }
            }
          }
        }
      }
    },
    "/brand": {
      "get": {
        "description": "Returns a list of brand keys to which the user has access",
        "operationId": "getBrandKeys",
        "responses": {
          "200": {
            "description": "a list of brand keys",
            "schema": {
              "$ref": "#/definitions/arrayOfStrings"
            }
          }
        }
      }
    },
    "/brand/{brandKey}": {
      "parameters": [
        {
          "name": "brandKey",
          "type": "string",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "description": "Returns the requested brand details",
        "operationId": "getBrand",
        "responses": {
          "200": {
            "description": "brand details",
            "schema": {
              "$ref": "#/definitions/brand"
            }
          }
        }
      },
      "put": {
        "description": "Create or update a brand",
        "operationId": "putBrand",
        "responses": {
          "204": {
            "description": "no body",
            "schema": {
            }
          }
        }
      }
    },
    "/brand/{brandKey}/location": {
      "parameters": [
        {
          "name": "brandKey",
          "type": "string",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "parameters": [
          {
            "name": "projection",
            "type": "string",
            "in": "query",
            "required": true,
            "default": "universal"
          }
        ],
        "description": "Returns a list of location keys",
        "operationId": "getLocationKeys",
        "responses": {
          "200": {
            "description": "a list of location keys",
            "schema": {
              "$ref": "#/definitions/arrayOfStrings"
            }
          }
        }
      }
    },
    "/brand/{brandKey}/location/{locationKey}": {
      "parameters": [
        {
          "name": "brandKey",
          "type": "string",
          "in": "path",
          "required": true
        },
        {
          "name": "locationKey",
          "type": "string",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "parameters": [
          {
            "name": "projection",
            "type": "string",
            "in": "query",
            "required": true,
            "default": "universal"
          },
          {
            "name": "includeRefs",
            "type": "string",
            "in": "query",
            "enum": ["true", "false"],
            "required": true,
            "default": "false"
          }
        ],
        "description": "Returns a location",
        "operationId": "getLocation",
        "responses": {
          "200": {
            "description": "a location",
            "schema": {
              "$ref": "#/definitions/location"
            }
          }
        }
      }
    },
    "/brand/{brandKey}/location/{locationKey}/{source}": {
      "parameters": [
        {
          "name": "brandKey",
          "type": "string",
          "in": "path",
          "required": true
        },
        {
          "name": "locationKey",
          "type": "string",
          "in": "path",
          "required": true
        },
        {
          "name": "source",
          "type": "string",
          "in": "path",
          "required": true
        }
      ],
      "put": {
        "parameters": [
          {
            "name": "document",
            "description": "location data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "description": "Creates or updates a location",
        "operationId": "putLocation",
        "responses": {
          "204": {
            "description": "no body",
            "schema": {
            }
          }
        }
      }
    },
    "/event": {
      "get": {
        "parameters": [
          {
            "name": "brandKey",
            "type": "string",
            "in": "query",
            "required": true
          },
          {
            "name": "locationKey",
            "type": "string",
            "in": "query",
            "required": true
          },
          {
            "name": "source",
            "type": "string",
            "in": "query"
          }
        ],
        "description": "Returns a list of events",
        "operationId": "getEvents",
        "responses": {
          "200": {
            "description": "a list of events",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/event"
              }
            }
          }
        }
      }
    },
    "/apiKey": {
      "x-blip-keyManagerAuthorization": true,
      "post": {
        "parameters": [
          {
            "name": "body",
            "description": "brandKeys",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/postApiKeyBody"
            }
          }
        ],
        "description": "Creates an API key for the specified brands",
        "operationId": "postApiKey",
        "responses": {
          "200": {
            "description": "an API key",
            "schema": {
              "$ref": "#/definitions/apiKey"
            }
          }
        }
      }
    },
    "/apiKey/{apiKey}": {
      "x-blip-keyManagerAuthorization": true,
      "parameters": [
        {
          "name": "apiKey",
          "type": "string",
          "in": "path",
          "required": true
        }
      ],
      "delete": {
        "description": "Revokes an API key",
        "operationId": "deleteApiKey",
        "responses": {
          "204": {
            "description": "no body",
            "schema": {
            }
          }
        }
      }
    },
    "/docs": {
      "get": {
        "description": "Returns the API documentation",
        "operationId": "getDocs",
        "responses": {
          "200": {
            "description": "API Documentation",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "source": {
      "type": "object",
      "properties": {
        "source": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [ "origin", "mutator" ]
        }
      },
      "required": [
        "source",
        "description",
        "type"
      ]
    },
    "projection": {
      "type": "object",
      "properties": {
        "projection": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "sources": {
          "$ref": "#/definitions/arrayOfStrings"
        }
      },
      "required": [
        "projection",
        "description",
        "sources"
      ]
    },
    "brand": {
      "type": "object",
      "properties": {
        "brandKey": {
          "type": "string"
        }
      },
      "required": ["brandKey"]
    },
    "event": {
      "type": "object",
      "properties": {
        "brandKey": {
          "type": "string"
        },
        "locationKey": {
          "type": "string"
        },
        "source": {
          "type": "string"
        },
        "patch": {
          "type": "object"
        },
        "occurred": {
          "type": "string"
        }
      },
      "required": [
        "brandKey",
        "locationKey",
        "source",
        "patch",
        "occurred"
      ]
    },
    "location": {
      "type": "object",
      "properties": {
        "brandKey": {
          "type": "string"
        },
        "locationKey": {
          "type": "string"
        },
        "projectionName": {
          "type": "string"
        },
        "document": {
          "type": "object"
        },
        "updated": {
          "type": "string"
        }
      },
      "required": [
        "brandKey",
        "locationKey",
        "projectionName",
        "document",
        "updated"
      ]
    },
    "putLocationBody": {
      "type": "object",
      "properties": {
        "document": {
          "type": "object"
        }
      },
      "required": ["document"]
    },
    "apiKey": {
      "type": "object",
      "properties": {
        "apiKey": {
          "type": "string"
        },
        "secretKey": {
          "type": "string"
        }
      },
      "required": ["apiKey", "secretKey"]
    },
    "postApiKeyBody": {
      "type": "object",
      "properties": {
        "brandKeys": {
          "oneOf": [
            {
              "type": "array",
              "minItems": 1,
              "items": {
                "type": "string"
              }
            },
            {
              "type": "string",
              "enum": ["all"]
            }
          ]
        },
        "notes": {
          "type": "string"
        }
      },
      "required": ["brandKeys"]
    },
    "arrayOfStrings": {
      "type": "array",
      "items": {
        "type": "string"
      }
    }
  }
}
